!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/malifpy/Alif/Git/TubesLogkom/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
TubesLogkom	README.md	/^# TubesLogkom$/;"	c
a	src/map.pl	/^a :-                    \\+ (isMarketplace(_)), \\+ (isHouse(_)), \\+ (isAlchemist(_)) ->$/;"	l
add_chicken	src/ranching.pl	/^add_chicken :-          chicken(X,_,_,_),$/;"	l
add_chicken	src/ranching.pl	/^add_chicken :-       \\+ chicken(_,_,_,_),$/;"	l
add_cow	src/ranching.pl	/^add_cow :-              cow(X,_,_,_),$/;"	l
add_cow	src/ranching.pl	/^add_cow :-           \\+ cow(_,_,_,_),$/;"	l
add_horse	src/ranching.pl	/^add_horse :-            horse(X,_,_,_),$/;"	l
add_horse	src/ranching.pl	/^add_horse :-          \\+ horse(_,_,_,_),$/;"	l
add_sheep	src/ranching.pl	/^add_sheep :-           sheep(X,_,_,_),$/;"	l
add_sheep	src/ranching.pl	/^add_sheep :-         \\+ sheep(_,_,_,_),$/;"	l
alchemist	src/main.pl	/^alchemist               :-  alchemistMenu, !.$/;"	l
alchemistMenu	src/alchemist.pl	/^alchemistMenu               :-  player(X,Y), (X \\= 1; Y \\= 1), write('You are not in alchemist/;"	l
buy	src/marketplace.pl	/^buy :- \\+isStarted(_), write('You have to start your game first!'),!.$/;"	l
buy	src/marketplace.pl	/^buy :- isStarted(_), \\+isMarketplace(_), write('You are not in the marketplace'),!.$/;"	l
buy	src/marketplace.pl	/^buy :- isStarted(_), isMarketplace(_),(\\+isBuy(_), buyOption, asserta(isBuy(true));$/;"	l
buyOption	src/marketplace.pl	/^buyOption :- write('What do you want to buy ?'),nl,$/;"	l
buy_bait	src/marketplace.pl	/^buy_bait :- $/;"	l
buy_chicken	src/marketplace.pl	/^buy_chicken :- $/;"	l
buy_chicken_feed	src/marketplace.pl	/^buy_chicken_feed :- $/;"	l
buy_chili_seed	src/marketplace.pl	/^buy_chili_seed :- $/;"	l
buy_cow	src/marketplace.pl	/^buy_cow :- $/;"	l
buy_cow_feed	src/marketplace.pl	/^buy_cow_feed :- $/;"	l
buy_horse	src/marketplace.pl	/^buy_horse :- $/;"	l
buy_horse_feed	src/marketplace.pl	/^buy_horse_feed :- $/;"	l
buy_paddy_seed	src/marketplace.pl	/^buy_paddy_seed :- $/;"	l
buy_pineapple_seed	src/marketplace.pl	/^buy_pineapple_seed :- $/;"	l
buy_sheep	src/marketplace.pl	/^buy_sheep :- $/;"	l
buy_sheep_feed	src/marketplace.pl	/^buy_sheep_feed :- $/;"	l
buy_strawberry_seed	src/marketplace.pl	/^buy_strawberry_seed :- $/;"	l
buy_tomato_seed	src/marketplace.pl	/^buy_tomato_seed :- $/;"	l
canFishNearby	src/fishing.pl	/^canFishNearby   :-  player(XP, YP),$/;"	l
checkAfter	src/inventory.pl	/^checkAfter                 :-   capacity(X), X > 100.$/;"	l
clockAfterFarming	src/clock.pl	/^clockAfterFarming :-retract(clock(X)), NewX is X+5,$/;"	l
clockAfterFishing	src/clock.pl	/^clockAfterFishing :-retract(clock(X)), NewX is X+5,$/;"	l
clockAfterMarket	src/clock.pl	/^clockAfterMarket :- retract(clock(X)), NewX is X+5,$/;"	l
clockAfterMove	src/clock.pl	/^clockAfterMove :-   retract(clock(X)), (\\+ speedBoost(_) -> NewX is X+5; NewX is X+2),$/;"	l
clockAfterRanching	src/clock.pl	/^clockAfterRanching :-retract(clock(X)), NewX is X+5,$/;"	l
clockAfterSleep	src/clock.pl	/^clockAfterSleep :-  retract(clock(X)),$/;"	l
clockRules	src/clock.pl	/^clockRules :-       clock(X), X > 1439, $/;"	l
completeQuest	src/quest.pl	/^completeQuest   :-  finalQuest(harvest, HTarget), finalQuest(fish, FTarget), finalQuest(ranch, R/;"	l
createMap	src/map.pl	/^createMap :-            asserta(player(4,10)),$/;"	l
createPond	src/map.pl	/^createPond :-           asserta(water(4,4)),asserta(water(5,4)),$/;"	l
createRiver	src/map.pl	/^createRiver :-          asserta(water(15,5)),$/;"	l
d	src/map.pl	/^d :-                    \\+ (isMarketplace(_)), \\+ (isHouse(_)), \\+ (isAlchemist(_)) ->$/;"	l
delete_chicken	src/ranching.pl	/^delete_chicken :-       show_chicken,write('insert ID: '), read_integer(ID),$/;"	l
delete_cow	src/ranching.pl	/^delete_cow :-       show_cow,write('insert ID: '), read_integer(ID),$/;"	l
delete_horse	src/ranching.pl	/^delete_horse :-       show_horse,write('insert ID: '), read_integer(ID),$/;"	l
delete_sheep	src/ranching.pl	/^delete_sheep :-       show_sheep,write('insert ID: '), read_integer(ID),$/;"	l
dig	src/farming.pl	/^dig :- \\+isStarted(_), write('You have to start your game first!'),!.$/;"	l
dig	src/farming.pl	/^dig :- player(X,Y), \\+canDig(X,Y),$/;"	l
dig	src/farming.pl	/^dig :- player(X,Y),canDig(X,Y),$/;"	l
enterRanch	src/ranching.pl	/^enterRanch          :- \\+ (isRanch(_)), player(X,Y), X =:= 2, Y =:= 9, asserta(isRanch(true)).$/;"	l
exit	src/main.pl	/^exit                    :-  retract(isHouse(_)).$/;"	l
exitBuy	src/marketplace.pl	/^exitBuy :- retract(isBuy(_)),exitMarket,market,!.$/;"	l
exitMarket	src/marketplace.pl	/^exitMarket :- write('Thanks for coming !!!'),nl,$/;"	l
exitSell	src/marketplace.pl	/^exitSell :- retract(isSell(_)),exitMarket,market,!.$/;"	l
failHouse	src/house.pl	/^failHouse                       :-  write('You are not in house menu').$/;"	l
failState	src/main.pl	/^failState               :-  write('You have worked hard, but in the end result is all that matte/;"	l
fish	src/fishing.pl	/^fish    :-  canFishNearby   ->  ($/;"	l
fishWithBait	src/fishing.pl	/^fishWithBait    :-  getFish,$/;"	l
fishWithL1Rod	src/fishing.pl	/^fishWithL1Rod   :-  random(FishRNG),$/;"	l
fishWithL2Rod	src/fishing.pl	/^fishWithL2Rod   :-  random(FishRNG),$/;"	l
fishWithL3Rod	src/fishing.pl	/^fishWithL3Rod   :-  random(FishRNG),$/;"	l
fishWithoutBait	src/fishing.pl	/^fishWithoutBait :-  random(TrashGacha),$/;"	l
getFish	src/fishing.pl	/^getFish         :-  ($/;"	l
getQuest	src/quest.pl	/^getQuest                :-  random(3, 11, RHarvest), random(3, 11, RFish), random(3, 11, RRanch)/;"	l
goSleep	src/house.pl	/^goSleep                         :-  write('You went to sleep'), nl, nl, clockAfterSleep, day(Aft/;"	l
harvest	src/farming.pl	/^harvest :- \\+isStarted(_), write('You have to start your game first!'),!.$/;"	l
harvest	src/farming.pl	/^harvest :- player(X,Y), $/;"	l
harvest_chili	src/farming.pl	/^harvest_chili :- player(X,Y), $/;"	l
harvest_paddy	src/farming.pl	/^harvest_paddy :- player(X,Y), $/;"	l
harvest_pineapple	src/farming.pl	/^harvest_pineapple :- player(X,Y), $/;"	l
harvest_strawberry	src/farming.pl	/^harvest_strawberry :- player(X,Y), $/;"	l
harvest_tomato	src/farming.pl	/^harvest_tomato :- player(X,Y), $/;"	l
help	src/main.pl	/^help:-$/;"	l
house	src/main.pl	/^house                   :-  player(X,Y), X =:= 4, Y =:= 10, (\\+ isHouse(_), writeActHouse, asse/;"	l
inventory	src/inventory.pl	/^inventory :-            write('Your inventory: '),$/;"	l
kapasitas	src/inventory.pl	/^kapasitas :-            \\+(inventoryI(_,_,_,_,_,_)),$/;"	l
kapasitas	src/inventory.pl	/^kapasitas :-            findall(Jumlah, inventoryI(_,_,_,_,_,Jumlah), ListJumlah),$/;"	l
level_2_fishing_rod	src/marketplace.pl	/^level_2_fishing_rod :-$/;"	l
level_2_shovel	src/marketplace.pl	/^level_2_shovel :- $/;"	l
level_2_watering_can	src/marketplace.pl	/^level_2_watering_can :- $/;"	l
level_3_fishing_rod	src/marketplace.pl	/^level_3_fishing_rod :- $/;"	l
level_3_shovel	src/marketplace.pl	/^level_3_shovel :- $/;"	l
level_3_watering_can	src/marketplace.pl	/^level_3_watering_can :- $/;"	l
listConsumable	src/inventory.pl	/^listConsumable :-       findall(Jumlah,inventoryI(_,_,consumable,_,_,Jumlah), ListJumlahConsumab/;"	l
listItem	src/inventory.pl	/^listItem :-             findall(Jumlah,inventoryI(_,_,item,_,_,Jumlah), ListJumlahItem),$/;"	l
map	src/map.pl	/^map :-                  isStarted(_) -> $/;"	l
market	src/marketplace.pl	/^market :- \\+isStarted(_), write('You have to start your game first!'),!.$/;"	l
market	src/marketplace.pl	/^market :- isStarted(_), \\+isMarketplace(_),write('You are not in the marketplace !'),!.$/;"	l
market	src/marketplace.pl	/^market :- isStarted(_),player(X,Y), X =:= 12, Y =:= 12, (\\+ isMarketplace(_), $/;"	l
marketOption	src/marketplace.pl	/^marketOption :- write('What do you want to do ?'),nl,$/;"	l
plant	src/farming.pl	/^plant :- \\+isStarted(_), write('You have to start your game first!'),!.$/;"	l
plant	src/farming.pl	/^plant :- player(X,Y), $/;"	l
plant_chili	src/farming.pl	/^plant_chili :- isStarted(_),isPlant(_),day(Z),$/;"	l
plant_paddy	src/farming.pl	/^plant_paddy :- isStarted(_),isPlant(_),day(Z),$/;"	l
plant_pineapple	src/farming.pl	/^plant_pineapple :- isStarted(_),isPlant(_),day(Z),$/;"	l
plant_strawberry	src/farming.pl	/^plant_strawberry :- isStarted(_),isPlant(_),day(Z),$/;"	l
plant_tomato	src/farming.pl	/^plant_tomato :- isStarted(_),isPlant(_),day(Z),$/;"	l
playerStatus	src/player.pl	/^playerStatus                    :-  player(Job,Level,Level_farm,Exp_farm,Level_fish,Exp_fish,Lev/;"	l
punishTired	src/clock.pl	/^punishTired :-     clock(Y), Y < 360,$/;"	l
quest	src/main.pl	/^quest                   :-  isStarted(_), \\+ isQuest(_),$/;"	l
quest	src/main.pl	/^quest                   :-  isStarted(_), isQuest(_) -> write('You have an on-going quest!'), !.$/;"	l
questAddFish	src/quest.pl	/^questAddFish    :-  isQuest(_)  ->  runQuest(fish, FishNum),$/;"	l
questAddHarvest	src/quest.pl	/^questAddHarvest :-  isQuest(_)  ->  runQuest(harvest, HarvestNum),$/;"	l
questAddRanch	src/quest.pl	/^questAddRanch   :-  isQuest(_)  ->  runQuest(ranch, RanchNum),$/;"	l
questInfo	src/quest.pl	/^questInfo       :-  (isQuest(_) -> questProgress ; write('No Quest Running'), nl).$/;"	l
questProgress	src/quest.pl	/^questProgress   :-  write('Current Quest Progress:'), nl, nl,$/;"	l
quit	src/alchemist.pl	/^quit                        :-  retract(alchemist(_,_)), retract(isAlchemist(_)), write('Alchemi/;"	l
readDiary	src/main.pl	/^readDiary               :-  isHouse(_), readTheDiary, !; failHouse.$/;"	l
readTheDiary	src/house.pl	/^readTheDiary                    :-  write('Here are the list of your entries:'), nl,$/;"	l
refreshQuest	src/quest.pl	/^refreshQuest    :-  \\+ quest(_, _),$/;"	l
rich	src/main.pl	/^rich                    :-  richPotion, !.$/;"	l
richPotion	src/alchemist.pl	/^richPotion                  :-  isAlchemist(_), (\\+ isRich(_), (player(_,_,_,_,_,_,_,_,_,Gold),/;"	l
s	src/map.pl	/^s :-                    \\+ (isMarketplace(_)), \\+ (isHouse(_)), \\+ (isAlchemist(_)) ->$/;"	l
secret	src/main.pl	/^secret                  :-  secretPotion, !.$/;"	l
secretPotion	src/alchemist.pl	/^secretPotion                :-  isAlchemist(_), write('What is happening?'), nl, write('Ugh...../;"	l
sell	src/marketplace.pl	/^sell :- \\+isStarted(_), write('You have to start your game first!'),!.$/;"	l
sell	src/marketplace.pl	/^sell :- isStarted(_), \\+isMarketplace(_), write('You are not in the marketplace !'),!.$/;"	l
sell	src/marketplace.pl	/^sell :- isStarted(_), isMarketplace(_), (\\+isSell(_), sellOption, asserta(isSell(true));$/;"	l
sellOption	src/marketplace.pl	/^sellOption :- isStarted(_), isMarketplace(_),$/;"	l
sell_bait	src/marketplace.pl	/^sell_bait :- $/;"	l
sell_chicken	src/marketplace.pl	/^sell_chicken :- $/;"	l
sell_chicken_feed	src/marketplace.pl	/^sell_chicken_feed :- $/;"	l
sell_chili	src/marketplace.pl	/^sell_chili :- $/;"	l
sell_chili_seed	src/marketplace.pl	/^sell_chili_seed :- $/;"	l
sell_cow	src/marketplace.pl	/^sell_cow :- $/;"	l
sell_cow_feed	src/marketplace.pl	/^sell_cow_feed :- $/;"	l
sell_eggs	src/marketplace.pl	/^sell_eggs :- $/;"	l
sell_horse	src/marketplace.pl	/^sell_horse :- $/;"	l
sell_horse_feed	src/marketplace.pl	/^sell_horse_feed :- $/;"	l
sell_horse_milk	src/marketplace.pl	/^sell_horse_milk :- $/;"	l
sell_mackerel_fish	src/marketplace.pl	/^sell_mackerel_fish :- $/;"	l
sell_milk	src/marketplace.pl	/^sell_milk :- $/;"	l
sell_paddy	src/marketplace.pl	/^sell_paddy :- $/;"	l
sell_paddy_seed	src/marketplace.pl	/^sell_paddy_seed :- $/;"	l
sell_pineapple	src/marketplace.pl	/^sell_pineapple :- $/;"	l
sell_pineapple_seed	src/marketplace.pl	/^sell_pineapple_seed :- $/;"	l
sell_puffer_fish	src/marketplace.pl	/^sell_puffer_fish :- $/;"	l
sell_sardines_fish	src/marketplace.pl	/^sell_sardines_fish :- $/;"	l
sell_sheep	src/marketplace.pl	/^sell_sheep :- $/;"	l
sell_sheep_feed	src/marketplace.pl	/^sell_sheep_feed :- $/;"	l
sell_strawberry	src/marketplace.pl	/^sell_strawberry :- $/;"	l
sell_strawberry_seed	src/marketplace.pl	/^sell_strawberry_seed :- $/;"	l
sell_tomato	src/marketplace.pl	/^sell_tomato :- $/;"	l
sell_tomato_seed	src/marketplace.pl	/^sell_tomato_seed :- $/;"	l
sell_tuna_fish	src/marketplace.pl	/^sell_tuna_fish :- $/;"	l
sell_wool	src/marketplace.pl	/^sell_wool :- $/;"	l
showClock	src/clock.pl	/^showClock :-        clock(X), Jam is X \/\/ 60, Menit is X mod 60,$/;"	l
show_chicken	src/ranching.pl	/^show_chicken :-         count_chicken(X), write('Total ayam: '), write(X),nl,$/;"	l
show_cow	src/ranching.pl	/^show_cow :-             count_cow(X), write('Total cow: '), write(X),nl,$/;"	l
show_horse	src/ranching.pl	/^show_horse :-           count_horse(X), write('Total horse: '), write(X),nl,$/;"	l
show_sheep	src/ranching.pl	/^show_sheep :-           count_sheep(X), write('Total domba: '), write(X),nl,$/;"	l
sleep	src/main.pl	/^sleep                   :-  isHouse(_), goSleep, !; failHouse.$/;"	l
speed	src/main.pl	/^speed                   :-  speedPotion, !.$/;"	l
speedPotion	src/alchemist.pl	/^speedPotion                 :-  isAlchemist(_), (\\+ isSpeed(_), (player(_,_,_,_,_,_,_,_,_,Gold)/;"	l
start	src/main.pl	/^start                   :-  isStarted(_) -> write('You already start your journey!');$/;"	l
startGame	src/main.pl	/^startGame:- $/;"	l
status	src/main.pl	/^status                  :-  playerStatus.$/;"	l
throw	src/inventory.pl	/^throw                         :- inventoryI(_,_,consumable,_,_,_),$/;"	l
w	src/map.pl	/^w :-                    \\+ (isMarketplace(_)), \\+ (isHouse(_)), \\+ (isAlchemist(_)) ->$/;"	l
watering	src/farming.pl	/^watering :- \\+isStarted(_), write('You have to start your game first!'),!.$/;"	l
watering	src/farming.pl	/^watering :- isStarted(_), player(X,Y) ,\\+canWater(X,Y), write('You can not watering right here!/;"	l
watering	src/farming.pl	/^watering :- isStarted(_), player(X,Y), Y1 is Y - 1,$/;"	l
writeActHouse	src/house.pl	/^writeActHouse                   :-  write('What do you want to do?'), nl,$/;"	l
writeDiary	src/main.pl	/^writeDiary              :-  isHouse(_), writeInDiary, !; failHouse.$/;"	l
writeInDiary	src/house.pl	/^writeInDiary                    :-  day(X), (\\+ diary(X,_) -> write('Write your diary for Day '/;"	l
writePotion	src/alchemist.pl	/^writePotion                 :-  (\\+ isRich(_), \\+ isSpeed(_), write('- Rich Potion (5000 gold)/;"	l
writeSleep	src/alchemist.pl	/^writeSleep                  :-  write('      ______________________'), nl,$/;"	l
